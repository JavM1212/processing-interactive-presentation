import gifAnimation.*; // para la manipulacion de gifs
import processing.sound.*; // para la manipulacion del sonido

float DONUT_RADIUS = 250;

int BG_COLOR = #FFFFFF;
int DONUT_COLOR = #F9F9F9;
int DONUT_THICKNESS = 50;

// Variables globales 
int currentScene = 1; 
int scene2Duration = 10000; // en milisegundos
int selectedOption = 0; // del menu de rueda
boolean showOpts = false;
String[][] defTetxt = {
    {
      "Pandurata plantae", 
      "Esta planta es ideal para las personas\nque buscan tener una compañera que\nse de fácil cuido y le de vida a tu casa", 
      "Busca Semisombra",
      "Requiere poco tiempo",
      "Para el Asesino de plantas"
    },
    {
      "Guzmania",
      "Es una bromelia de fácil cultivo. No es\nmuy exigente en cuanto a la luz, pero\nagradece cercanía de una ventana con\ncortina para asegurar una luz tamizada",
      "Busca Luz Indirecta", 
      "Requiere un tiempo moderado de cuidado",
      "Para la que le gusta hablarle a sus plantas"
    },
    {
      "Philodendron ‘Hoja de Corazón’",
      "Esta planta es ideal para las personas\nque buscan tener una compañera que\nse de fácil cuido y le de vida a tu casa",
      "Busca Luz Indirecta",
      "Requiere poco tiempo",
      "Para el Asesino de plantas"
    },
    {
      "Monstera deliciosa",
      "Es muy usada principalmente como\nplanta de interior para decoración,\ngeneralmente en hoteles, restaurantes,\noficinas, y en domicilios particulares.",
      "Busca Luz Indirecta",
      "Requiere poco tiempo",
      "Para el Asesino de plantas"
    }
  };
int currentText = 0;

// Imagenes
PImage img_titulo; 
PImage img_1;
PImage img_2;
PImage img_3;
PImage img_4;

// Gifs
Gif gif_portada; 
Gif escena_2;
Gif opt_1;
Gif opt_2;
Gif opt_3;
Gif opt_4;
Gif currentGif;

// Sonidos
SoundFile audio_1;
SoundFile audio_2;

void setup() {
  fullScreen(); 
  
  // Cargar imagenes
  img_titulo = loadImage("assets/imgs/titulo_plantas.png");
  img_1 = loadImage("assets/imgs/planta_1.png");
  img_2 = loadImage("assets/imgs/planta_2.png");
  img_3 = loadImage("assets/imgs/planta_3.png");
  img_4 = loadImage("assets/imgs/planta_4.png");
  
  // Cargas gifs
  gif_portada = new Gif(this, "assets/gifs/escena_1.gif");
  escena_2 = new Gif(this, "assets/gifs/escena_2.gif");
  opt_1 = new Gif(this, "assets/gifs/opt_1.gif");
  opt_2 = new Gif(this, "assets/gifs/opt_2.gif");
  opt_3 = new Gif(this, "assets/gifs/opt_3.gif");
  opt_4 = new Gif(this, "assets/gifs/opt_4.gif");
  
  // Cargas audios
  audio_1 = new SoundFile(this, "assets/audios/audio1.mp3");
  audio_2 = new SoundFile(this, "assets/audios/audio2.mp3");  
  
  audio_1.loop();
}
    
void draw() {
  // Dibujamos la escena actual
  switch (currentScene) {
    case 1:
      dibujarEscena1();
      break;
    case 2:
      dibujarEscena2();
      break;
    case 3:
      dibujarEscena3();
      break;
  }
}


// Función para dibujar la escena 1
void dibujarEscena1() {
  // Dibujamos el fondo
  gif_portada.loop();
  image(gif_portada, 0, 0);

  // Dibujamos la imagen en el centro de la pantalla
  float xImg_titulo = width/2 - img_titulo.width/2;
  float yImg_titulo = height/2 - img_titulo.height/2;
  image(img_titulo, xImg_titulo, yImg_titulo);

  if (mouseX >= width/2 - 150 && mouseX <= width/2 + 150 && mouseY >= height/2 + 155 && mouseY <= height/2 + 220) {
    fill(#D1DBB3);
  } else {
    fill(#C4C4C4);
  }
  rectMode(CENTER);
  rect(width/2, height/2 + 187.5, 300, 65, 10); // changed to width 300 and height 65, and adjusted position
  fill(255); // white text
  textSize(24); // larger font size
  textAlign(CENTER, CENTER);
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 24));
  text("Encuentra más", width/2, height/2 + 185);
  noStroke();

  // Verificamos si se ha hecho clic en el botón
  if (mouseX >= width/2 - 150 && mouseX <= width/2 + 150 && mouseY >= height/2 + 155 && mouseY <= height/2 + 220 && mousePressed) {
    
    // Detenemos el sonido de la primera escena
    audio_1.stop();
    
    // Mostramos la segunda escena
    currentScene = 2;
    
    // Iniciamos el sonido de la segunda escena
    audio_2.loop();
    
    // Reseteamos el temporizador para la segunda escena
    scene2Duration = millis();
  }
}

void dibujarEscena2() {
  // Establecemos el fondo blanco
  background(255);

  escena_2.loop();
  image(escena_2, width/2 - escena_2.width/2, height/2 - escena_2.height/2); // dibuja la imagen  

  // Mostramos el texto en la esquina superior izquierda
  textSize(35);
  fill(#C4C4C4); // cambiar el color del texto a #C4C4C4
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 30));
  text("!Tus mejores matches!", 300, 120); // mover el texto hacia abajo y hacia la derecha


  // Verificamos si han pasado 10 segundos
  if (millis() - scene2Duration >= 1000) { // remplazar por 10000
    currentScene = 3;
    
    audio_2.stop();
  }
}

void dibujarEscena3() {
  if (currentGif == null ) {
    currentGif = opt_1;
  }
  
  // Establecemos el fondo blanco
  background(255);

  currentGif.loop();
  imageMode(CENTER);
  // Dibujamos el gif animado centrado en la pantalla
  image(currentGif, width/2 - 125, height/2);

  // Dibujamos de arriba a la izquierda
  textSize(35);
  fill(#C4C4C4); // cambiar el color del texto a #C4C4C4
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 30));
  text("!Tus mejores matches!", 300, 140); // mover el texto hacia abajo y hacia la derecha

  // Dibujamos el texto a la izquierda del gif
  textAlign(LEFT);
  textSize(35);
  fill(#C4C4C4);
  textFont(createFont("assets/fonts/Lora-Bold.ttf", 30));
  text(defTetxt[currentText][0], 145, height/2 - 210);
  
  // Dibujamos el texto a la izquierda del gif
  textSize(21.5);
  fill(#C4C4C4);
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 24));
  text(defTetxt[currentText][1], 145, height/2 - 125, 20);
  
  // Elemento de lista 1
  ellipse(170, height/2 + 40, 45, 45);
  textSize(21.5);
  fill(#C4C4C4);
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 23));
  text(defTetxt[currentText][2], 240, height/2 + 50);
  
  // Elemento de lista 2
  ellipse(170, height/2 + 110, 45, 45);
  textSize(21.5);
  fill(#C4C4C4);
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 23));
  text(defTetxt[currentText][3], 240, height/2 + 120);
  
  // Elemento de lista 3
  ellipse(170, height/2 + 190, 45, 45);
  textSize(21.5);
  fill(#C4C4C4);
  textFont(createFont("assets/fonts/Lora-Regular.ttf", 23));
  text(defTetxt[currentText][4], 240, height/2 + 200);

  // Dibujamos el boton
  noFill();
  strokeWeight(1);
  stroke(#C4C4C4);
  ellipse(width - 850, height / 2, 64, 64);
  fill(#C4C4C4);
  textSize(32);
  textAlign(CENTER, CENTER);
  textFont(createFont("assets/fonts/Arimo-Regular.ttf", 30));
  text("↑↓", width - 850, height / 2 - 5);

  // Verificamos si se ha hecho clic en el botón
  if (dist(mouseX, mouseY, width - 850, height / 2) < 32 && mousePressed) {
    // Desplegamos el grid de opciones
    if (showOpts == true) showOpts = false;
    else showOpts = true;
  }

  // Desplegamos el grid de opciones si se ha presionado el botón correspondiente
  

  
  // dona medio buena
if (showOpts) {
  // Dibujamos el fondo de dona
  fill(DONUT_COLOR);
  //ellipse(width/2 + 550, height/2, 650, 650);
  // Primer arco
  arc(width/2 + 550, height/2, 600, 600, 0 + radians(45), HALF_PI + radians(45));
  // Segundo arco
  arc(width/2 + 550, height/2, 600, 600, HALF_PI + radians(45), PI + radians(45));
  // Tercer arco
  arc(width/2 + 550, height/2, 600, 600, PI + radians(45), PI + HALF_PI + radians(45));
  // Cuarto arco
  arc(width/2 + 550, height/2, 600, 600, PI + HALF_PI + radians(45), TWO_PI + radians(45));
  
  
  
  
  // Dibujamos las opciones
  fill(DONUT_COLOR);
  imageMode(CENTER);
  image(img_1, width/2 - 230 + 550, height/2, 150, 150);
  image(img_2, width/2 + 550, height/2 - 230, 150, 150);
  image(img_3, width/2 + 230 + 550, height/2, 150, 150);
  image(img_4, width/2 + 550, height/2 + 230, 150, 150);
  
  
  float d = dist(mouseX, mouseY, width/2 + 550, height/2);
  float innerRadius = 125;
  float outerRadius = 325;
  if (d > innerRadius && d < outerRadius) {
  float angle = atan2(mouseY - height/2, mouseX - (width/2 + 550));
  float pointX = width/2 + 550 + cos(angle) * 300;
  float pointY = height/2 + sin(angle) * 300;
  if (angle > radians(45) && angle < HALF_PI + radians(45)) {
    // HOVER DE ABAJO
    fill(#EEEEEE);
    strokeWeight(2);
    stroke(0);
    //arc(width/2 + 550, height/2, 600, 600, HALF_PI + radians(45), PI + radians(45));
    // arc(width/2 + 550, height/2, 600, 600, 0 + radians(90), radians(135));
    arc(width/2 + 550, height/2, 600, 600, 0 + radians(45), HALF_PI + radians(45));
    image(img_4, width/2 + 550, height/2 + 230, 150, 150);
   } 
  // else if ((angle >= radians(135) && angle < radians(225) + HALF_PI) || 
  //        (angle >= radians(315) - HALF_PI && angle < radians(45)) ) {
  //   fill(#EEEEEE);
  //   strokeWeight(2);
  //   stroke(0);
  //   //arc(width/2 + 550, height/2, 600, 600, PI + radians(45), TWO_PI + radians(45));
  //   // arc(width/2 + 550, height/2, 600, 600,  HALF_PI + radians(45), PI + radians(45));
  //   arc(width/2 + 550, height/2, 600, 600, HALF_PI + radians(45), PI + radians(45));
  // image(img_1, width/2 - 230 + 550, height/2, 150, 150);
  
  // }
    }  else if ((angle > radians(0) && angle < radians(45)) || (angle > -radians(315) && angle < radians(45))) {
    fill(#EEEEEE);
    strokeWeight(2);
    stroke(0);
    arc(width/2 + 550, height/2, 600, 600, 0 - radians(45), HALF_PI - radians(45));
  // image(img_3, width/2 + 230 + 550, height/2, 150, 150);
  arc(width/2 + 550, height/2, 600, 600, PI + radians(45), PI + HALF_PI + radians(45));
  
  } else if (angle < radians(315) && angle > radians(225)) {
  //   fill(#EEEEEE);
  //   strokeWeight(2);
  //   stroke(0);
  //   // arc(width/2 + 550, height/2, 600, 600, HALF_PI - radians(45), HALF_PI + radians(45));
  // arc(width/2 + 550, height/2, 600, 600, PI + HALF_PI + radians(45), TWO_PI + radians(45));
 
  // }
}

fill(BG_COLOR);
noStroke();
ellipse(width/2 + 550, height/2, 250, 250);

if (mouseX >= width/2 - 230 + 550 && mouseX <= width/2 - 230 + 550 + 150 && mouseY >= height/2 - 75 && mouseY <= height/2 + 75 && mousePressed) {
  // Se ha hecho clic en la opción 1
  currentGif = opt_1;
  currentText = 0;
} else if (mouseX >= width/2 + 550 && mouseX <= width/2 + 550 + 150 && mouseY >= height/2 - 150 - 75 && mouseY <= height/2 - 230 + 75 && mousePressed) {
  // Se ha hecho clic en la opción 2
  currentGif = opt_2;
  currentText = 1;
} else if (mouseX >= width/2 + 230 + 550 && mouseX <= width/2 + 230 + 550 + 150 && mouseY >= height/2 - 75 && mouseY <= height/2 + 75 && mousePressed) {
  // Se ha hecho clic en la opción 3
  currentGif = opt_3;
  currentText = 2;
}else if (mouseX >= width/2 + 550 && mouseX <= width/2 + 550 + 230 && mouseY >= height/2 + 230 - 75 && mouseY <= height/2 + 230 + 75 && mousePressed) {
  // Se ha hecho clic en la opción 4
  currentGif = opt_4;
  currentText = 3;
}

// no dona menu bueno
//if (showOpts) {
//  // Dibujamos el grid de opciones
//  imageMode(CENTER);
//  image(img_1, width/2 - 150 + 550, height/2, 150, 150);
//  image(img_2, width/2 + 550, height/2 - 150, 150, 150);
//  image(img_3, width/2 + 150 + 550, height/2, 150, 150);
//  image(img_4, width/2 + 550, height/2 + 150, 150, 150);

//  // Verificamos si se ha hecho clic en alguna de las opciones
//  if (mouseX >= width/2 - 150 + 550 && mouseX <= width/2 - 150 + 550 + 150 && mouseY >= height/2 - 75 && mouseY <= height/2 + 75 && mousePressed) {
//    // Se ha hecho clic en la opción 1
//    currentGif = opt_1;
//    currentText = 0;
//    showOpts = false;
//  } else if (mouseX >= width/2 + 550 && mouseX <= width/2 + 550 + 150 && mouseY >= height/2 - 150 - 75 && mouseY <= height/2 - 150 + 75 && mousePressed) {
//    // Se ha hecho clic en la opción 2
//    currentGif = opt_2;
//    currentText = 1;
//    showOpts = false;
//  } else if (mouseX >= width/2 + 150 + 550 && mouseX <= width/2 + 150 + 550 + 150 && mouseY >= height/2 - 75 && mouseY <= height/2 + 75 && mousePressed) {
//    // Se ha hecho clic en la opción 3
//    currentGif = opt_3;
//    currentText = 2;
//    showOpts = false;
//  } else if (mouseX >= width/2 + 550 && mouseX <= width/2 + 550 + 150 && mouseY >= height/2 + 150 - 75 && mouseY <= height/2 + 150 + 75 && mousePressed) {
//    // Se ha hecho clic en la opción 4
//    currentGif = opt_4;
//    currentText = 3;
//    showOpts = false;
//  }
}
  
  
}
